{"version":3,"sources":["apis/dictionary.js","config/firebase.js","config/helpers.js","auth/GoogleAuth.js","actions/index.js","actions/types.js","components/Avatar.js","components/Header.js","components/Blurb.js","components/Greeting.js","components/Home.js","components/Footer.js","components/WordSearchResult.js","components/userPages/sentences/Sentence.js","components/userPages/sentences/SentenceList.js","components/userPages/sentences/CreateSentence.js","components/userPages/Practice.js","components/userPages/WordCard.js","components/Search.js","components/Pagination.js","components/userPages/WordListItem.js","components/userPages/WordList.js","components/userPages/UserPage.js","components/ActionButtons.js","App.js","reducers/authReducer.js","reducers/dictionaryReducer.js","reducers/wordsReducer.js","reducers/index.js","reducers/wordReducer.js","index.js","sass/Buttons.module.scss","sass/Sentences.module.scss","sass/SearchResult.module.scss","sass/WordCard.module.scss","sass/Search.module.scss","sass/WordListItem.module.scss","images/logo.png","sass/Header.module.scss","sass/Avatar.module.scss","sass/Footer.module.scss","sass/UserPage.module.scss"],"names":["axios","create","baseURL","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_MESSAGINGSENDERID_KEY","appId","REACT_APP_APPID_KEY","measurementId","REACT_APP_MEASUREMENTID_KEY","firebase","initializeApp","databaseRef","database","dbRef","fireStore","ref","child","firestore","getUserWords","userID","a","once","then","snapshot","val","response","userWords","Object","keys","map","key","id","word","data","sentences","catch","error","console","createUserWord","newWord","userId","push","newUserWord","wordkey","set","on","res","setCurrentUserWord","wordId","currentUserID","log","createUserSentence","currentWordID","getWord","GoogleAuth","onAuthChange","isSignedIn","name","auth","currentUser","get","getBasicProfile","getGivenName","avatarlink","getImageUrl","getId","props","signIn","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","auth2","getAuthInstance","listen","this","className","buttonStyles","btn","btn__transparent","btn__small","onClick","renderAuthButton","Component","connect","state","userName","avatarLink","dispatch","collection","doc","exists","type","payload","to","style","avatar","src","alt","nav","logo","Blurb","Greeting","css","Home","Footer","footer","searchResult","createWord","updateVisibility","useState","audioURL","setAudioURL","useSound","play","currentWord","meta","replace","styles","word__header","toUpperCase","hwi","prs","newURL","pronunciation","subDirectory","audio","sound","baseFilename","startsWith","indexOf","URLHelper","close","close__saved","shortdef","bookmark","wordObj","saveWord","Sentence","sentence","SentenceList","sentenceList","index","createSentence","updateSentence","form","length","maxLength","row","value","onChange","e","target","btn__blue","btn__large","handleSentenceSave","practice","btn__white","wordCard","fl","item","buttons","searchWord","term","setTerm","formHeader","search","onSubmit","preventDefault","handleSubmit","placeholder","Pagination","itemsPerPage","totalItems","paginate","numberOfPages","i","Math","ceil","number","setUserWord","listitem","hw","btn__medium","handleLearnMoreClick","bookmark__saved","WordList","currentPage","fetchWords","currentItems","setState","indexOfLastItem","indexOfFirstItem","words","slice","renderList","bind","showResult","setShowResult","useEffect","setSearchResultVisibility","userPage","path","App","ActionButtons","INITIAL_STATE","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"iRAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,oE,iBCALC,EAAiB,CACrBC,OAAQC,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmBL,iPAAYM,gCAC/BC,MAAOP,iPAAYQ,oBACnBC,cAAeT,iPAAYU,6BAI7BC,IAASC,cAAcd,GAGvB,IAAMe,EAAcF,IAASG,WAChBC,EAAQJ,IAASG,WAEjBE,GADWH,EAAYI,MAAMC,MAAM,SACvBP,IAASQ,a,QClBrBC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACbP,EACVE,IADU,iBACII,IACdE,KAAK,SACLC,MAAK,SAACC,GACL,GAAIA,EAASC,MAAO,CAClB,IAAMC,EAAWF,EAASC,MAAME,UAChC,OAAO,YACFC,OAAOC,KAAKH,GAAUI,KAAI,SAACC,GAC5B,MAAO,CACLC,GAAID,EACJE,KAAM,CACJC,KAAMR,EAASK,GAAKE,KAAKC,KACzBC,UAAWT,EAASK,GAAKE,KAAKE,gBAMtC,MAAO,MAGVC,OAAM,SAACC,GAAD,OAAWC,QAAQD,WAtBF,mFAAH,sDAyBZE,EAAc,uCAAG,WAAOC,EAASC,GAAhB,mBAAApB,EAAA,sEACFP,EAAME,IAAN,iBAAoByB,EAApB,eAAwCC,OADtC,cACtBC,EADsB,OAEtBC,EAAUD,EAAYZ,IAC5BY,EAAYE,IAAI,CAAEZ,KAAMO,IAER1B,EAAME,IAAN,iBAAoByB,EAApB,sBAAwCG,IAEhDE,GAAG,eAAe,SAACC,GACzBd,EAAO,CACLD,GAAIY,EACJX,KAAM,CACJC,KAAMa,EAAItB,MAAMS,KAChBC,UAAWY,EAAItB,MAAMU,eAZC,kBAiBrBF,GAjBqB,2CAAH,wDAoBde,EAAkB,uCAAG,WAAOC,EAAQC,GAAf,iBAAA7B,EAAA,6DAE1BL,EAAMF,EAAME,IAAN,iBAAoBkC,EAApB,sBAA+CD,EAA/C,UAFoB,SAGnBjC,EAAIM,KAAK,SAASC,MAAK,SAACC,GAUnC,OATAc,QAAQa,IAAI3B,EAASC,MAAMS,MAC3BD,EAAO,CACLD,GAAIiB,EACJhB,KAAM,CACJC,KAAMV,EAASC,MAAMS,KACrBC,UAAWX,EAASC,MAAMU,YAG9BG,QAAQa,IAAIlB,GACLA,KAbuB,mFAAH,wDAiBlBmB,EAAkB,uCAAG,WAChCjB,EACAkB,EACAH,GAHgC,eAAA7B,EAAA,6DAK1BiC,EAAUxC,EAAME,IAAN,iBACJkC,EADI,sBACuBG,EADvB,UALgB,SAQNvC,EACvBE,IADuB,iBACTkC,EADS,sBACkBG,EADlB,oBAEvBR,IAFuB,YAEfV,IAVqB,8BAYnBmB,EAAQhC,KAAK,SAASC,MAAK,SAACC,GACvC,MAAO,CACLQ,GAAIqB,EACJpB,KAAM,CACJC,KAAMV,EAASC,MAAMS,KACrBC,UAAWX,EAASC,MAAMU,eAjBA,mFAAH,0D,gBC3DzBoB,E,4MAqBJC,aAAe,SAACC,GACd,GAAIA,EAAY,CACd,IAAMC,EAAO,EAAKC,KAAKC,YAAYC,MAAMC,kBAAkBC,eACrDC,EAAa,EAAKL,KAAKC,YAC1BC,MACAC,kBACAG,cACGjC,EAAK,EAAK2B,KAAKC,YAAYC,MAAMK,QACvC,EAAKC,MAAMC,OAAOpC,EAAI0B,EAAMM,QAE5B,EAAKG,MAAME,W,EAIfC,cAAgB,WACd,EAAKX,KAAKS,U,EAGZG,eAAiB,WACf,EAAKZ,KAAKU,W,kEAtCS,IAAD,OAClBG,OAAOC,KAAKC,KAAK,gBAAgB,WAE/BF,OAAOC,KAAKE,OACTC,KAAK,CACJC,SAAS,2EACTC,MAAO,UAERvD,MAAK,WAGJ,EAAKoC,KAAOa,OAAOC,KAAKM,MAAMC,kBAE9B,EAAKxB,aAAa,EAAKG,KAAKF,WAAWI,OACvC,EAAKF,KAAKF,WAAWwB,OAAO,EAAKzB,sB,yCA6BvC,OAA8B,OAA1B0B,KAAKf,MAAMV,WACN,KACEyB,KAAKf,MAAMV,WAElB,4BACE0B,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAaE,iBAAtC,YAA0DF,IAAaG,YAChFC,QAASN,KAAKX,gBAEd,uBAAGY,UAAU,kBAAb,aAKF,4BACEA,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAaE,iBAAtC,YAA0DF,IAAaG,YAChFC,QAASN,KAAKZ,eAEd,uBAAGa,UAAU,kBAAb,c,+BAMN,OAAO,6BAAMD,KAAKO,wB,GApEGC,aA4EVC,eAJS,SAACC,GAEvB,OADAtD,QAAQa,IAAIyC,EAAMjC,MACX,CAAEF,WAAYmC,EAAMjC,KAAKF,cAEM,CAAEW,OC9DpB,SAAC3B,EAAQoD,EAAUC,GAAnB,8CAAkC,WAAOC,GAAP,SAAA1E,EAAA,sDACtCN,EAAUiF,WAAW,SAASC,IAAIxD,GAG/CoB,MACAtC,MAAK,SAAC0E,GACAA,EAAIC,OAGP5D,QAAQa,IAAI,kBAFZpC,EAAUiF,WAAW,SAASC,IAAIxD,GAAQI,IAAI,CAAEgD,WAAUC,kBAK7DvE,MAAK,WACJwE,EAAS,CACPI,KClCe,UDmCfC,QAAS,CAAE3D,SAAQoD,WAAUC,mBAfmB,2CAAlC,uDD8D4BzB,QC1C3B,SAAC5B,GACtB,MAAO,CACL0D,KCzCoB,WD0CpBC,QAAS3D,KDuCEkD,CAA8CpC,G,0CGhE9CoC,eAHS,SAACC,GACvB,MAAO,CAAEE,WAAYF,EAAMjC,KAAKmC,cAEnBH,EAZA,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WAEhB,OADAxD,QAAQa,IAAI2C,GAEV,kBAAC,IAAD,CAAMO,GAAG,SACP,yBAAKlB,UAAWmB,IAAMC,OAAQC,IAAKV,EAAYW,IAAI,eCyB1Cd,eAHS,SAACC,GACvB,MAAO,CAAEnC,WAAYmC,EAAMjC,KAAKF,cAEnBkC,EAxBA,SAAC,GAAoB,IAAlBlC,EAAiB,EAAjBA,WAEhB,OADAnB,QAAQa,IAAIM,GAEV,mBAAK0B,UAAWuB,OACd,YAAC,IAAD,CAAML,GAAG,KACP,mBAAKG,IAAKG,IAAMF,IAAI,mBAEtB,sBACGhD,EACC,sBACE,YAAC,EAAD,OAEA,KACJ,sBACE,YAAC,EAAD,YCIKmD,EAtBD,WACZ,OACE,yBAAKzB,UAAU,SACb,iEACA,6BACA,6BAHF,0OAQE,6BACA,+B,0sBCdN,IAiCe0B,EAjCE,WACf,OACE,mBACEC,IAAKA,YAAF,MAsBH,+BACA,sBAAQ3B,UAAU,gCAChB,wBAAUzB,KAAK,iBCnBRqD,EATF,WACX,OACE,yBAAK5B,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,QCeS6B,EAlBA,WACb,OACE,4BAAQ7B,UAAW8B,UACjB,2BACE,uBAAG9B,UAAU,iBADf,uDAIA,2BACE,uBAAGA,UAAU,kBADf,kBAGA,2BACE,uBAAGA,UAAU,qBADf,qBAGA,yE,4CC6ESQ,gBATS,SAACC,GAEvB,OADAtD,QAAQa,IAAIyC,GACL,CACL1C,cAAe0C,EAAMjC,KAAKlB,OAC1BgB,WAAYmC,EAAMjC,KAAKF,WACvByD,aAActB,EAAMsB,gBAIgB,CAAEC,WRxBhB,SAAC3E,EAASC,GAAV,8CAAqB,WAAOsD,GAAP,eAAA1E,EAAA,sEACtBkB,EAAeC,EAASC,GADF,OACvCf,EADuC,OAE7CqE,EAAS,CACPI,KCrE4B,mBDsE5BC,QAAS1E,IAJkC,2CAArB,wDQwBXiE,EApEU,SAAC,GAMnB,IALLzC,EAKI,EALJA,cACAO,EAII,EAJJA,WACAyD,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,iBACI,EAC4BC,mBAAS,IADrC,mBACGC,EADH,KACaC,EADb,OAEWC,YAASF,GAAjBG,EAFH,oBAGAC,EAAcR,EAAa,GAAGS,KAAK3F,GACvC0F,EAAcA,EAAYE,QAAQ,aAAc,IAoBhD,OACE,yBAAKzC,UAAW0C,KAAO5F,MACrB,yBAAKkD,UAAW0C,KAAOC,cACrB,4BAAKJ,EAAYK,eACjB,4BACE5C,UAAU,+BACVK,QAxBgB,WAEtB,GAAI0B,EAAa,GAAGc,IAAIC,IAAK,CAC3B,IAAIC,EAjCQ,SAACC,GACjB,IAEIC,EADAC,EAAQF,EAAc,GAAGG,MAAMD,MAE/BE,EAAeF,EAWnB,OATED,EADEC,EAAMG,WAAW,OACJ,MACNH,EAAMG,WAAW,MACX,MACwB,IARvB,6BAQGC,QAAQJ,GACZ,SAEAA,EAAM,GAEhB,kEAA8DD,EAA9D,YAA8EG,EAA9E,QAmBUG,CAAUxB,EAAa,GAAGc,IAAIC,KAC3CV,EAAYW,GAGdT,MAmBM,8BAAU/D,KAAK,eAEjB,4BACEyB,UAAS,UAAKC,IAAauD,MAAlB,YAA2BvD,IAAawD,cACjDpD,QAAS,kBAAM4B,MAEf,uBAAGjC,UAAU,2BAGjB,6BACE,2BAAI+B,EAAa,GAAG2B,WAErBpF,EACC,4BAAQ0B,UAAWC,IAAa0D,SAAUtD,QAAS,kBA7BxC,WACf,IAAMuD,EAAU,CACd7G,KAAK,eAAMgF,GACX/E,UAAW,CAAC,oCAEdgF,EAAW4B,EAAS7F,GAwByC8F,KACvD,uBAAG7D,UAAU,sBAEb,SCtEK8D,GARE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,6BACE,2BAAIA,GACJ,+B,oBCWSC,GAZM,SAAC,GAAmB,IAAjBhH,EAAgB,EAAhBA,UAUtB,OAAO,wBAAIgD,UAAW0C,KAAOuB,cARpBjH,EAAUL,KAAI,SAACoH,EAAUG,GAC9B,OACE,wBAAItH,IAAKsH,GACP,kBAAC,GAAD,CAAUH,SAAUA,UCqDfvD,gBARS,SAACC,GACvB,MAAO,CACLvC,cAAeuC,EAAM8B,YAAY1F,GACjC0F,YAAa9B,EAAM8B,YACnBxE,cAAe0C,EAAMjC,KAAKlB,UAIU,CAAE6G,eXqBZ,SAC5BnH,EACAkB,EACAH,GAH4B,8CAIzB,WAAO6C,GAAP,eAAA1E,EAAA,sEACoB+B,EACrBjB,EACAkB,EACAH,GAJC,OACGxB,EADH,OAMHY,QAAQa,IAAIzB,EAAU,kBACtBqE,EAAS,CACPI,KC3F2B,kBD4F3BC,QAAS1E,IATR,2CAJyB,wDWrBfiE,EAvDQ,SAAC,GAKjB,IAJLtC,EAII,EAJJA,cACAiG,EAGI,EAHJA,eACA5B,EAEI,EAFJA,YACAxE,EACI,EADJA,cACI,EAC+BmE,mBACjC,mCAFE,mBACG6B,EADH,KACaK,EADb,KAKEtH,EAAOyF,EAAYzF,KASzB,OACE,6BACE,4BAAKA,EAAKC,KAAK,GAAGyF,KAAK3F,IACvB,yBAAKmD,UAAW0C,KAAO2B,MACpB9B,GAAezF,EAAKE,UAAUsH,OAAS,GACtC,oCACE,8BACEC,UAAU,MACVC,IAAI,IACJC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOP,EAAeO,EAAEC,OAAOH,UAE3C,4BACEzE,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAa4E,UAAtC,YAAmD5E,IAAa6E,YACzEzE,QAAS,kBArBM,SAACvD,GAC1B,IACME,EAAS,UADA,CAAC+G,GACD,YAAkBjH,EAAKE,YACtCoH,EAAe,IACfD,EAAenH,EAAWkB,EAAeH,GAiBhBgH,CAAmBjI,KAFpC,SAQF,wDAGJ,kBAAC,GAAD,CAAcE,UAAWF,EAAKE,gBCPrBwD,gBAHS,SAACC,GACvB,MAAO,CAAE8B,YAAa9B,EAAM8B,eAEf/B,EAnCE,SAAC,GAAqB,IAAnB+B,EAAkB,EAAlBA,YAClB,OACE,yBAAKvC,UAAW0C,KAAOsC,UACrB,wDACCvI,OAAOC,KAAK6F,GAAa+B,OAAS,EACjC,oCACE,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAMpD,GAAG,cACP,4BACElB,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAa6E,WAAtC,YAAoD7E,IAAagF,aAD5E,UAQJ,oCACE,kFACA,kBAAC,IAAD,CAAM/D,GAAG,SACP,4BACElB,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAa6E,WAAtC,YAAoD7E,IAAagF,aAD5E,uB,oBC0BGzE,gBAJS,SAACC,GACvB,MAAO,CAAE8B,YAAa9B,EAAM8B,eAGf/B,EApCE,SAAC,GAAqB,IAAnB+B,EAAkB,EAAlBA,YAClB,GAAIA,EAAY1F,GAAI,CAClB,IAAMC,EAAOyF,EAAYzF,KACzB,OACE,yBAAKkD,UAAW0C,KAAOwC,UACrB,4BAAKpI,EAAKC,KAAK,GAAGyF,KAAK3F,IACvB,6BAEA,2BAAIC,EAAKC,KAAK,GAAGoI,IACjB,6BACA,4BAAyBrI,EAAKC,KAAK,GAAG2G,SAnBhC/G,KAAI,SAACyI,EAAMlB,GACrB,OACE,wBAAItH,IAAKsH,GACNkB,EACD,kCAgBA,yBAAKpF,UAAW0C,KAAO2C,SACrB,kBAAC,IAAD,CACEnE,GAAG,QACHlB,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAa6E,WAAtC,YAAoD7E,IAAagF,aAF5E,QAMA,kBAAC,IAAD,CACE/D,GAAG,iBACHlB,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAa6E,WAAtC,YAAoD7E,IAAagF,aAF5E,cAUN,OAAO,Q,oBCVIzE,gBAJS,SAACC,GACvB,MAAO,CAAE3D,KAAM2D,EAAM3D,QAGiB,CAAEwI,WdgBhB,SAACC,GAAD,8CAAU,WAAO3E,GAAP,eAAA1E,EAAA,sEAEX3B,EAAMmE,IAAN,WAAc6G,EAAd,gBArCF3K,yCAmCa,OAE5B2B,EAF4B,OAGlCY,QAAQa,IAAIzB,GAEZqE,EAAS,CAAEI,KCtDc,aDsDKC,QAAS1E,EAASQ,OALd,2CAAV,wDchBXyD,EA9BA,SAACxB,GAAW,IAAD,EACAkD,mBAAS,IADT,mBACjBqD,EADiB,KACXC,EADW,KAEhBF,EAAqBtG,EAArBsG,WAAqBtG,EAATlC,KAQpB,OACE,6BACE,wBAAIkD,UAAW0C,KAAO+C,YAAtB,2CAGA,0BAAMzF,UAAW0C,KAAOgD,OAAQC,SAAU,SAAChB,GAAD,OAXzB,SAACA,GACpBA,EAAEiB,iBACFN,EAAWC,GACXC,EAAQ,IAQ2CK,CAAalB,KAC5D,2BACEF,MAAOc,EACPb,SAAU,SAACC,GAAD,OAAOa,EAAQb,EAAEC,OAAOH,QAClCqB,YAAY,8BCIPC,GA1BI,SAAC,GAGlB,IAH8D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxCC,EAAgB,GAEbC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAc5I,KAAK6I,GAErB,OACE,6BACE,4BACGD,EAAcxJ,KAAI,SAAC4J,GAClB,OACE,wBAAI3J,IAAK2J,GACP,4BACEvG,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAagF,WAAtC,YAAoDhF,IAAaG,YAC1EC,QAAS,kBAAM6F,EAASK,KAEvBA,U,oBCyBF/F,gBAJS,SAACC,GACvB,MAAO,CAAE1C,cAAe0C,EAAMjC,KAAKlB,UAGG,CAAEkJ,YhBkCf,SAAC1I,EAAQC,GAAT,8CAA2B,WAAO6C,GAAP,eAAA1E,EAAA,sEAC7B2B,EAAmBC,EAAQC,GADE,OAC9CxB,EAD8C,OAEpDY,QAAQa,IAAIzB,GACZqE,EAAS,CAAEI,KC3EgB,gBD2EKC,QAAS1E,IAHW,2CAA3B,wDgBlCZiE,EAjCM,SAAC,GAA0C,IAAxC1D,EAAuC,EAAvCA,KAAM0J,EAAiC,EAAjCA,YAAazI,EAAoB,EAApBA,cACnCwE,EAAczF,EAAKA,KACzB,OACE,yBAAKkD,UAAW0C,KAAO+D,UACrB,4BAAKlE,EAAYxF,KAAK,GAAGyF,KAAK3F,IAC9B,2BAAI0F,EAAYxF,KAAK,GAAG8F,IAAI6D,IAC5B,6BACA,yBAAK1G,UAAW0C,KAAO2C,SACrB,kBAAC,IAAD,CAAMnE,GAAG,cACP,4BACElB,UAAS,UAAKC,IAAaC,IAAlB,YAAyBD,IAAa0G,YAAtC,YAAqD1G,IAAa4E,UAAlE,KACTxE,QAAS,kBAdQ,SAACvD,EAAM0J,EAAazI,GAC/CyI,EAAY1J,EAAKD,GAAIkB,GAcT6I,CAAqB9J,EAAM0J,EAAazI,KAH5C,eASF,4BACEiC,UAAS,UAAKC,IAAa0D,SAAlB,YAA8B1D,IAAa4G,iBACpDxG,QAAS,kBAAMlD,QAAQa,IAAI,aAE3B,uBAAGgC,UAAU,+BC1BjB8G,G,4MACJrG,MAAQ,CAAEsG,YAAa,EAAGf,aAAc,G,kEAGtCjG,KAAKf,MAAMgI,WAAWjH,KAAKf,MAAMjB,iB,iCAGxBkJ,GACT,OAAOA,EAAatK,KAAI,SAACG,GACvB,OACE,wBAAIF,IAAKE,EAAKD,IACZ,kBAAC,GAAD,CAAcC,KAAMA,U,+BAMnByJ,GACPxG,KAAKmH,SAAS,CAAEH,YAAaR,M,+BAI7B,IAAMY,EAAkBpH,KAAKU,MAAMsG,YAAchH,KAAKU,MAAMuF,aACtDoB,EAAmBD,EAAkBpH,KAAKU,MAAMuF,aAChDiB,EAAelH,KAAKf,MAAMqI,MAAMC,MACpCF,EACAD,GAGF,OADAhK,QAAQa,IAAIiJ,GAEV,oCACE,kBAAC,GAAD,MACA,gDACA,4BAAKlH,KAAKwH,WAAWN,IACrB,kBAAC,GAAD,CACEjB,aAAcjG,KAAKU,MAAMuF,aACzBC,WAAYlG,KAAKf,MAAMqI,MAAM/C,OAC7B4B,SAAUnG,KAAKmG,SAASsB,KAAKzH,a,GArChBQ,aAgDRC,gBAJS,SAACC,GACvB,MAAO,CAAE4G,MAAO5G,EAAM4G,MAAOtJ,cAAe0C,EAAMjC,KAAKlB,UAGjB,CAAE0J,WjBOhB,SAAC/K,GAAD,8CAAY,WAAO2E,GAAP,eAAA1E,EAAA,sEACbF,EAAaC,GADA,OAC9BM,EAD8B,OAEpCqE,EAAS,CACPI,KCzD4B,mBD0D5BC,QAAS1E,IAJyB,2CAAZ,wDiBPXiE,CAAyCsG,I,SCKzCtG,gBATS,SAACC,GAEvB,OADAtD,QAAQa,IAAI,uBAAwByC,GAC7B,CACLnC,WAAYmC,EAAMjC,KAAKF,WACvBoC,SAAUD,EAAMjC,KAAKkC,SACrB6B,YAAa9B,EAAMsB,gBAIRvB,EAhDE,SAAC,GAA2C,IAAzClC,EAAwC,EAAxCA,WAAYoC,EAA4B,EAA5BA,SAAU6B,EAAkB,EAAlBA,YAAkB,EACtBL,oBAAS,GADa,mBACnDuF,EADmD,KACvCC,EADuC,KAG1DC,qBAAU,WACRC,MACC,CAACrF,IAEJ,IAAMqF,EAA4B,WAChCF,GAAeD,IAEjB,OACE,kBAAC,IAAD,KACE,6BAASzH,UAAU,aAChB1B,EACC,yBAAK0B,UAAW6H,aACd,sCAAYnH,GACX6B,EAAY+B,QAAUmD,EACrB,kBAAC,GAAD,CAAkBxF,iBAAkB2F,IAClC,KACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,kBACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,SAKN,wDCzBKtH,I,OAAAA,aAHS,SAACC,GACvB,MAAO,CAAEnC,WAAYmC,EAAMjC,KAAKF,cAEnBkC,EAbQ,SAAC,GAAoB,IAAlBlC,EAAiB,EAAjBA,WACxB,OACE,yBAAK0B,UAAU,kBACb,uDACC1B,EAAa,kBAAC,EAAD,MAAa,KAC3B,kBAAC,EAAD,WCkBSyJ,OAnBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK/H,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8H,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,QAGJ,kBAACE,GAAD,MACA,kBAAC,EAAD,SCtBFC,GAAgB,CACpB3J,WAAY,KACZhB,OAAQ,MCHJ2K,GAAgB,GCAhBA,GAAgB,GCKPC,eAAgB,CAC7B1J,KHAa,WAAoC,IAAnCiC,EAAkC,uDAA1BwH,GAAeE,EAAW,uCAChD,OAAQA,EAAOnH,MACb,IpBTmB,UoBWjB,OADA7D,QAAQa,IAAImK,EAAOlH,SACZ,2BACFR,GADL,IAEEnC,YAAY,EACZhB,OAAQ6K,EAAOlH,QAAQ3D,OACvBoD,SAAUyH,EAAOlH,QAAQP,SACzBC,WAAYwH,EAAOlH,QAAQN,aAE/B,IpBjBoB,WoBkBlB,OAAO,2BAAKF,GAAZ,IAAmBnC,YAAY,EAAOhB,OAAQ,OAGhD,QACE,OAAOmD,IGfXsB,aFNa,WAAoC,IAAnCtB,EAAkC,uDAA1BwH,GAAeE,EAAW,uCAChD,OAAQA,EAAOnH,MACb,IrBDuB,aqBErB,OAAO,YAAImH,EAAOlH,SACpB,QACE,OAAOR,IEEX4G,MDNa,WAAoC,IAAnC5G,EAAkC,uDAA1BwH,GAAeE,EAAW,uCAChD,OAAQA,EAAOnH,MACb,ItBD4B,mBsBE1B,MAAM,GAAN,mBAAWP,GAAX,CAAkB0H,EAAOlH,UAC3B,ItBC4B,mBsBA1B,OAAO,YAAIkH,EAAOlH,SACpB,QACE,OAAOR,ICAX8B,YCRa,WAAyB,IAAxB9B,EAAuB,uDAAf,GAAI0H,EAAW,uCACrC,OAAQA,EAAOnH,MACb,IxBEyB,gBwBAvB,OADA7D,QAAQa,IAAI,gBAAiBmK,EAAOlH,SAC7B,2BAAKR,GAAU0H,EAAOlH,SAC/B,IxBF2B,kBwBIzB,OADA9D,QAAQa,IAAI,eAAgBmK,EAAOlH,SAC5B,2BACFR,GACA0H,EAAOlH,SAEd,QACE,OAAOR,MCHP2H,GAAQC,YAAYC,GAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,GAAD,OAEFO,SAASC,eAAe,U,kBChB1BC,EAAOC,QAAU,CAAC,SAAW,0BAA0B,UAAY,2BAA2B,gBAAkB,iCAAiC,iBAAmB,kCAAkC,MAAQ,uBAAuB,IAAM,qBAAqB,UAAY,2BAA2B,WAAa,4BAA4B,iBAAmB,kCAAkC,sBAAwB,uCAAuC,WAAa,4BAA4B,YAAc,6BAA6B,WAAa,8B,mBCAriBD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,KAAO,wBAAwB,aAAe,kC,mBCAvGD,EAAOC,QAAU,CAAC,KAAO,2BAA2B,aAAe,qC,mBCAnED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,4B,mBCAlED,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,+BAA+B,QAAU,gC,mBCDtED,EAAOC,QAAU,IAA0B,kC,mBCC3CD,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B","file":"static/js/main.75c4e658.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://www.dictionaryapi.com/api/v3/references/collegiate/json\",\n});\n","import firebase from \"firebase\";\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"wordmind-289222.firebaseapp.com\",\n  databaseURL: \"https://wordmind-289222.firebaseio.com\",\n  projectId: \"wordmind-289222\",\n  storageBucket: \"wordmind-289222.appspot.com\",\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID_KEY,\n  appId: process.env.REACT_APP_APPID_KEY,\n  measurementId: process.env.REACT_APP_MEASUREMENTID_KEY,\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// firebase.analytics();\n\nconst databaseRef = firebase.database();\nexport const dbRef = firebase.database();\nexport const wordsRef = databaseRef.ref().child(\"words\");\nexport const fireStore = firebase.firestore();\n","import * as firebase from \"firebase\";\nimport { wordsRef, dbRef } from \"../config/firebase\";\n\nexport const getUserWords = async (userID) => {\n  return await dbRef\n    .ref(`/words/${userID}`)\n    .once(\"value\")\n    .then((snapshot) => {\n      if (snapshot.val()) {\n        const response = snapshot.val().userWords;\n        return [\n          ...Object.keys(response).map((key) => {\n            return {\n              id: key,\n              word: {\n                data: response[key].word.data,\n                sentences: response[key].word.sentences,\n              },\n            };\n          }),\n        ];\n      } else {\n        return [];\n      }\n    })\n    .catch((error) => console.error());\n};\n\nexport const createUserWord = async (newWord, userId) => {\n  const newUserWord = await dbRef.ref(`/words/${userId}/userWords`).push();\n  const wordkey = newUserWord.key;\n  newUserWord.set({ word: newWord });\n\n  const getWord = dbRef.ref(`/words/${userId}/userWords/${wordkey}`);\n  let word;\n  getWord.on(\"child_added\", (res) => {\n    word = {\n      id: wordkey,\n      word: {\n        data: res.val().data,\n        sentences: res.val().sentences,\n      },\n    };\n  });\n\n  return word;\n};\n\nexport const setCurrentUserWord = async (wordId, currentUserID) => {\n  let word;\n  const ref = dbRef.ref(`/words/${currentUserID}/userWords/${wordId}/word`);\n  return await ref.once(\"value\").then((snapshot) => {\n    console.log(snapshot.val().data);\n    word = {\n      id: wordId,\n      word: {\n        data: snapshot.val().data,\n        sentences: snapshot.val().sentences,\n      },\n    };\n    console.log(word);\n    return word;\n  });\n};\n\nexport const createUserSentence = async (\n  sentences,\n  currentWordID,\n  currentUserID\n) => {\n  const getWord = dbRef.ref(\n    `/words/${currentUserID}/userWords/${currentWordID}/word`\n  );\n  const newSentence = await dbRef\n    .ref(`/words/${currentUserID}/userWords/${currentWordID}/word/sentences`)\n    .set([...sentences]);\n\n  return await getWord.once(\"value\").then((snapshot) => {\n    return {\n      id: currentWordID,\n      word: {\n        data: snapshot.val().data,\n        sentences: snapshot.val().sentences,\n      },\n    };\n  });\n};\n","import React, { Component } from \"react\";\nimport { signIn, signOut } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nimport buttonStyles from \"../sass/Buttons.module.scss\";\n\nclass GoogleAuth extends Component {\n  // if state is null, no user is signed in\n  componentDidMount() {\n    window.gapi.load(\"client:auth2\", () => {\n      // init returns a promise\n      window.gapi.client\n        .init({\n          clientId: `930494171277-1plsgodm6vb6oenoqu2oua2ae1leans0.apps.googleusercontent.com`,\n          scope: \"email\",\n        })\n        .then(() => {\n          // invoked after the library has loaded\n          //   auth is an object\n          this.auth = window.gapi.auth2.getAuthInstance();\n          // update auth state\n          this.onAuthChange(this.auth.isSignedIn.get());\n          this.auth.isSignedIn.listen(this.onAuthChange);\n        });\n    });\n  }\n\n  onAuthChange = (isSignedIn) => {\n    if (isSignedIn) {\n      const name = this.auth.currentUser.get().getBasicProfile().getGivenName();\n      const avatarlink = this.auth.currentUser\n        .get()\n        .getBasicProfile()\n        .getImageUrl();\n      const id = this.auth.currentUser.get().getId();\n      this.props.signIn(id, name, avatarlink);\n    } else {\n      this.props.signOut();\n    }\n  };\n\n  onSignInClick = () => {\n    this.auth.signIn();\n  };\n\n  onSignOutClick = () => {\n    this.auth.signOut();\n  };\n\n  renderAuthButton() {\n    // console.log(this.props);\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return (\n        <button\n          className={`${buttonStyles.btn} ${buttonStyles.btn__transparent} ${buttonStyles.btn__small}`}\n          onClick={this.onSignOutClick}\n        >\n          <i className=\"lni lni-google\">Sign Out</i>\n        </button>\n      );\n    } else {\n      return (\n        <button\n          className={`${buttonStyles.btn} ${buttonStyles.btn__transparent} ${buttonStyles.btn__small}`}\n          onClick={this.onSignInClick}\n        >\n          <i className=\"lni lni-google\">Sign In</i>\n        </button>\n      );\n    }\n  }\n  render() {\n    return <div>{this.renderAuthButton()}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state.auth);\n  return { isSignedIn: state.auth.isSignedIn };\n};\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\n","import {\n  SIGN_IN,\n  SIGN_OUT,\n  SEARCH_WORD,\n  CREATE_USER_WORD,\n  CREATE_SENTENCE,\n  SET_USER_WORD,\n  FETCH_USER_WORDS,\n} from \"../actions/types\";\nimport axios from \"../apis/dictionary\";\nimport { fireStore } from \"../config/firebase\";\nimport {\n  getUserWords,\n  createUserWord,\n  createUserSentence,\n  setCurrentUserWord,\n} from \"../config/helpers\";\nconst DICTIONARY_KEY = process.env.REACT_APP_API_KEY;\n\n// Google Auth\nexport const signIn = (userId, userName, avatarLink) => async (dispatch) => {\n  const userRef = fireStore.collection(\"words\").doc(userId);\n\n  userRef\n    .get()\n    .then((doc) => {\n      if (!doc.exists) {\n        fireStore.collection(\"words\").doc(userId).set({ userName, avatarLink });\n      } else {\n        console.log(\"already exists\");\n      }\n    })\n    .then(() => {\n      dispatch({\n        type: SIGN_IN,\n        payload: { userId, userName, avatarLink },\n      });\n    });\n};\n\nexport const signOut = (userId) => {\n  return {\n    type: SIGN_OUT,\n    payload: userId,\n  };\n};\n\n// flip state boolean to true or false\n// Google Auth\n\n// dictionary\n// First create an action\nexport const searchWord = (term) => async (dispatch) => {\n  // call axios.get to make an http request\n  const response = await axios.get(`/${term}?key=${DICTIONARY_KEY}`);\n  console.log(response);\n  // dispatch an action and send it to the reducer to update the state\n  dispatch({ type: SEARCH_WORD, payload: response.data });\n};\n// dictionary\n\n// Firebase\nexport const fetchWords = (userID) => async (dispatch) => {\n  const response = await getUserWords(userID);\n  dispatch({\n    type: FETCH_USER_WORDS,\n    payload: response,\n  });\n};\n\nexport const createWord = (newWord, userId) => async (dispatch) => {\n  const response = await createUserWord(newWord, userId);\n  dispatch({\n    type: CREATE_USER_WORD,\n    payload: response,\n  });\n};\n\nexport const setUserWord = (wordId, currentUserID) => async (dispatch) => {\n  const response = await setCurrentUserWord(wordId, currentUserID);\n  console.log(response);\n  dispatch({ type: SET_USER_WORD, payload: response });\n};\n\nexport const createSentence = (\n  sentences,\n  currentWordID,\n  currentUserID\n) => async (dispatch) => {\n  const response = await createUserSentence(\n    sentences,\n    currentWordID,\n    currentUserID\n  );\n  console.log(response, \"reeeeeeesponse\");\n  dispatch({\n    type: CREATE_SENTENCE,\n    payload: response,\n  });\n};\n// Firebase\n","export const SIGN_IN = \"SIGN_IN\";\nexport const SIGN_OUT = \"SIGN_OUT\";\nexport const CREATE_USER = \"CREATE_USER\";\nexport const SEARCH_WORD = \"FETCH_WORD\";\nexport const CREATE_USER_WORD = \"CREATE_USER_WORD\";\nexport const CREATE_SENTENCE = \"CREATE_SENTENCE\";\nexport const SET_USER_WORD = \"SET_USER_WORD\";\nexport const FETCH_USER_WORD = \"FETCH_USER_WORD\";\nexport const FETCH_USER_WORDS = \"FETCH_USER_WORDS\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport style from \"../sass/Avatar.module.scss\";\n\nconst Avatar = ({ avatarLink }) => {\n  console.log(avatarLink);\n  return (\n    <Link to=\"/user\">\n      <img className={style.avatar} src={avatarLink} alt=\"avatar\" />\n    </Link>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { avatarLink: state.auth.avatarLink };\n};\nexport default connect(mapStateToProps)(Avatar);\n","import React from \"react\";\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../images/logo.png\";\n\nimport { nav } from \"../sass/Header.module.scss\";\nimport Avatar from \"./Avatar\";\n\nconst Header = ({ isSignedIn }) => {\n  console.log(isSignedIn);\n  return (\n    <nav className={nav}>\n      <Link to=\"/\">\n        <img src={logo} alt=\"wordmind logo\" />\n      </Link>\n      <ul>\n        {isSignedIn ? (\n          <li>\n            <Avatar />\n          </li>\n        ) : null}\n        <li>\n          <GoogleAuth />\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\nconst divstyle = {\n  backgroundColor: \"#4960c9\",\n  color: \"#fff\",\n  width: \"300px\",\n  margin: \"0 auto\",\n};\nconst Blurb = () => {\n  return (\n    <div className=\"blurb\">\n      <h1>wordMind is a vocabulary builder.</h1>\n      <br />\n      <br />\n      Making sentences helps us put everything we have learned into action: so\n      you have learned a new word and you understand when to use it. But for the\n      brain to remember this word in the future, the best way to memorize is by\n      using it.\n      <br />\n      <br />\n      {/* <br />\n      <br />\n      Make ten sentences that use different meanings of the word you want to\n      learn or, if it is a verb, with different tenses. For example, if you want\n      to remember the phrasal verb “to tidy up”, write: “Maria, you must tidy\n      your room up”, “I have to tidy up before my friends come”, “Paul will\n      watch TV after he finishes tidying up the kitchen”. */}\n    </div>\n  );\n};\nexport default Blurb;\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx, css } from \"@emotion/core\";\n\nconst Greeting = () => {\n  return (\n    <div\n      css={css`\n        width: 60%;\n        margin: 0 auto;\n        border: 1px solid #bec0c4;\n        border-radius: 5px;\n        position: absolute;\n        left: 20%;\n        top: 222px;\n        color: #484c54;\n        background-color: #fff;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 0 1em;\n        -webkit-box-shadow: 4px 3px 19px 5px rgba(72, 76, 84, 0.67);\n        -moz-box-shadow: 4px 3px 19px 5px rgba(72, 76, 84, 0.67);\n        box-shadow: 4px 3px 19px 5px rgba(72, 76, 84, 0.67);\n        @media (max-width: 420px) {\n          width: 90%;\n        }\n      `}\n    >\n      <h1>Hello</h1>\n      <button className=\"mega-phone mega-phone--white\">\n        <ion-icon name=\"megaphone\"></ion-icon>\n      </button>\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React from \"react\";\nimport Blurb from \"./Blurb\";\nimport Greeting from \"./Greeting\";\nconst Home = () => {\n  return (\n    <div className=\"main\">\n      <Greeting />\n      <Blurb />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport { footer } from \"../sass/Footer.module.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className={footer}>\n      <p>\n        <i className=\"lni lni-home\"></i>1234 Fictional Street #5432 New York, NY\n        10000-0000\n      </p>\n      <p>\n        <i className=\"lni lni-phone\"></i>(000) 000-0000\n      </p>\n      <p>\n        <i className=\"lni lni-envelope\"></i>info@untitled.tld\n      </p>\n      <p>© wordMind 2020. All rights reserved.</p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createWord } from \"../actions\";\nimport useSound from \"use-sound\";\n\nimport buttonStyles from \"../sass/Buttons.module.scss\";\nimport styles from \"../sass/SearchResult.module.scss\";\n\nconst URLHelper = (pronunciation) => {\n  const alaphabet = \"abcdefghijklmnopqrstuvwxyz\";\n  let audio = pronunciation[0].sound.audio;\n  let subDirectory;\n  let baseFilename = audio;\n  if (audio.startsWith(\"bix\")) {\n    subDirectory = \"bix\";\n  } else if (audio.startsWith(\"gg\")) {\n    subDirectory = \"gg\";\n  } else if (alaphabet.indexOf(audio) !== -1) {\n    subDirectory = \"number\";\n  } else {\n    subDirectory = audio[0];\n  }\n  let url = `https://media.merriam-webster.com/audio/prons/en/us/mp3/${subDirectory}/${baseFilename}.mp3`;\n  return url;\n};\n\nconst WordSearchResult = ({\n  currentUserID,\n  isSignedIn,\n  searchResult,\n  createWord,\n  updateVisibility,\n}) => {\n  const [audioURL, setAudioURL] = useState(\"\");\n  const [play] = useSound(audioURL);\n  let currentWord = searchResult[0].meta.id;\n  currentWord = currentWord.replace(/[^a-zA-Z]/g, \"\");\n\n  const resetURLAndPlay = () => {\n    //   handle constant rerender, only update when ready\n    if (searchResult[0].hwi.prs) {\n      let newURL = URLHelper(searchResult[0].hwi.prs);\n      setAudioURL(newURL);\n    }\n\n    play();\n  };\n\n  const saveWord = () => {\n    const wordObj = {\n      data: { ...searchResult },\n      sentences: [\"Write something to get started!\"],\n    };\n    createWord(wordObj, currentUserID);\n  };\n\n  return (\n    <div className={styles.word}>\n      <div className={styles.word__header}>\n        <h3>{currentWord.toUpperCase()}</h3>\n        <button\n          className=\"mega-phone mega-phone--white\"\n          onClick={resetURLAndPlay}\n        >\n          <ion-icon name=\"megaphone\"></ion-icon>\n        </button>\n        <button\n          className={`${buttonStyles.close} ${buttonStyles.close__saved}`}\n          onClick={() => updateVisibility()}\n        >\n          <i className=\"lni lni-cross-circle\"></i>\n        </button>\n      </div>\n      <div>\n        <p>{searchResult[0].shortdef}</p>\n      </div>\n      {isSignedIn ? (\n        <button className={buttonStyles.bookmark} onClick={() => saveWord()}>\n          <i className=\"lni lni-bookmark\"></i>\n        </button>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    currentUserID: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n    searchResult: state.searchResult,\n  };\n};\n\nexport default connect(mapStateToProps, { createWord })(WordSearchResult);\n","import React from \"react\";\n\nconst Sentence = ({ sentence }) => {\n  return (\n    <div>\n      <p>{sentence}</p>\n      <hr></hr>\n    </div>\n  );\n};\nexport default Sentence;\n","import React from \"react\";\nimport Sentence from \"./Sentence\";\n\nimport styles from \"../../../sass/Sentences.module.scss\";\n\nconst SentenceList = ({ sentences }) => {\n  const renderList = () => {\n    return sentences.map((sentence, index) => {\n      return (\n        <li key={index}>\n          <Sentence sentence={sentence} />\n        </li>\n      );\n    });\n  };\n  return <ul className={styles.sentenceList}>{renderList()}</ul>;\n};\nexport default SentenceList;\n","import React, { useState } from \"react\";\nimport { createSentence } from \"../../../actions\";\nimport { connect } from \"react-redux\";\nimport SentenceList from \"./SentenceList\";\n\nimport styles from \"../../../sass/Sentences.module.scss\";\nimport buttonStyles from \"../../../sass/Buttons.module.scss\";\n\nconst CreateSentence = ({\n  currentWordID,\n  createSentence,\n  currentWord,\n  currentUserID,\n}) => {\n  const [sentence, updateSentence] = useState(\n    \"Write something and press save!\"\n  );\n\n  const word = currentWord.word;\n\n  const handleSentenceSave = (word) => {\n    const newArr = [sentence];\n    const sentences = [...newArr, ...word.sentences];\n    updateSentence(\"\");\n    createSentence(sentences, currentWordID, currentUserID);\n  };\n\n  return (\n    <div>\n      <h3>{word.data[0].meta.id}</h3>\n      <div className={styles.form}>\n        {currentWord && word.sentences.length < 11 ? (\n          <>\n            <textarea\n              maxLength=\"300\"\n              row=\"4\"\n              value={sentence}\n              onChange={(e) => updateSentence(e.target.value)}\n            />\n            <button\n              className={`${buttonStyles.btn} ${buttonStyles.btn__blue} ${buttonStyles.btn__large}`}\n              onClick={() => handleSentenceSave(word)}\n            >\n              Save\n            </button>\n          </>\n        ) : (\n          <p>All done. 100% Complete.</p>\n        )}\n      </div>\n      <SentenceList sentences={word.sentences} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentWordID: state.currentWord.id,\n    currentWord: state.currentWord,\n    currentUserID: state.auth.userId,\n  };\n};\n\nexport default connect(mapStateToProps, { createSentence })(CreateSentence);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CreateSentence from \"./sentences/CreateSentence\";\n\nimport buttonStyles from \"../../sass/Buttons.module.scss\";\nimport styles from \"../../sass/Sentences.module.scss\";\n\nconst Practice = ({ currentWord }) => {\n  return (\n    <div className={styles.practice}>\n      <h3>Write something to begin</h3>\n      {Object.keys(currentWord).length > 0 ? (\n        <>\n          <CreateSentence />\n\n          <Link to=\"/user/word\">\n            <button\n              className={`${buttonStyles.btn} ${buttonStyles.btn__large} ${buttonStyles.btn__white}`}\n            >\n              Back\n            </button>\n          </Link>\n        </>\n      ) : (\n        <>\n          <p>Whoops Something went wrong, click back to continue</p>\n          <Link to=\"/user\">\n            <button\n              className={`${buttonStyles.btn} ${buttonStyles.btn__large} ${buttonStyles.btn__white}`}\n            >\n              Back to words\n            </button>\n          </Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { currentWord: state.currentWord };\n};\nexport default connect(mapStateToProps)(Practice);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Practice from \"./Practice\";\n\nimport buttonStyles from \"../../sass/Buttons.module.scss\";\nimport styles from \"../../sass/WordCard.module.scss\";\n\nconst renderDefintionList = (list) => {\n  return list.map((item, index) => {\n    return (\n      <li key={index}>\n        {item}\n        <hr />\n      </li>\n    );\n  });\n};\nconst WordCard = ({ currentWord }) => {\n  if (currentWord.id) {\n    const word = currentWord.word;\n    return (\n      <div className={styles.wordCard}>\n        <h3>{word.data[0].meta.id}</h3>\n        <hr />\n\n        <p>{word.data[0].fl}</p>\n        <hr />\n        <ol>{renderDefintionList(word.data[0].shortdef)}</ol>\n        <div className={styles.buttons}>\n          <Link\n            to=\"/user\"\n            className={`${buttonStyles.btn} ${buttonStyles.btn__large} ${buttonStyles.btn__white}`}\n          >\n            Back\n          </Link>\n          <Link\n            to=\"/user/practice\"\n            className={`${buttonStyles.btn} ${buttonStyles.btn__large} ${buttonStyles.btn__white}`}\n          >\n            Practice\n          </Link>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { currentWord: state.currentWord };\n};\n\nexport default connect(mapStateToProps)(WordCard);\n","import React, { useEffect, useState } from \"react\";\nimport { searchWord } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nimport styles from \"../sass/Search.module.scss\";\n\nconst Search = (props) => {\n  const [term, setTerm] = useState(\"\");\n  const { searchWord, word } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    searchWord(term);\n    setTerm(\"\");\n  };\n\n  return (\n    <div>\n      <h2 className={styles.formHeader}>\n        Search through the dictionary to begin.\n      </h2>\n      <form className={styles.search} onSubmit={(e) => handleSubmit(e)}>\n        <input\n          value={term}\n          onChange={(e) => setTerm(e.target.value)}\n          placeholder=\"Search for a word...\"\n        />\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { word: state.word };\n};\n\nexport default connect(mapStateToProps, { searchWord })(Search);\n","import React from \"react\";\nimport buttonStyles from \"../sass/Buttons.module.scss\";\n\nconst Pagination = ({ itemsPerPage, totalItems, paginate }) => {\n  const numberOfPages = [];\n  // calculate page numbers\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\n    numberOfPages.push(i);\n  }\n  return (\n    <nav>\n      <ul>\n        {numberOfPages.map((number) => {\n          return (\n            <li key={number}>\n              <button\n                className={`${buttonStyles.btn} ${buttonStyles.btn__white} ${buttonStyles.btn__small}`}\n                onClick={() => paginate(number)}\n              >\n                {number}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setUserWord } from \"../../actions\";\n\nimport buttonStyles from \"../../sass/Buttons.module.scss\";\nimport styles from \"../../sass/WordListItem.module.scss\";\n\nconst handleLearnMoreClick = (word, setUserWord, currentUserID) => {\n  setUserWord(word.id, currentUserID);\n};\nconst WordListItem = ({ word, setUserWord, currentUserID }) => {\n  const currentWord = word.word;\n  return (\n    <div className={styles.listitem}>\n      <h3>{currentWord.data[0].meta.id}</h3>\n      <p>{currentWord.data[0].hwi.hw}</p>\n      <hr />\n      <div className={styles.buttons}>\n        <Link to=\"/user/word\">\n          <button\n            className={`${buttonStyles.btn} ${buttonStyles.btn__medium} ${buttonStyles.btn__blue} `}\n            onClick={() =>\n              handleLearnMoreClick(word, setUserWord, currentUserID)\n            }\n          >\n            Learn More\n          </button>\n        </Link>\n        <button\n          className={`${buttonStyles.bookmark} ${buttonStyles.bookmark__saved}`}\n          onClick={() => console.log(\"clicked\")}\n        >\n          <i className=\"lni lni-cross-circle\"></i>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { currentUserID: state.auth.userId };\n};\n\nexport default connect(mapStateToProps, { setUserWord })(WordListItem);\n","import React, { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchWords } from \"../../actions\";\nimport Search from \"../Search\";\nimport Pagination from \"../Pagination\";\nimport WordListItem from \"./WordListItem\";\n\nclass WordList extends Component {\n  state = { currentPage: 1, itemsPerPage: 6 };\n\n  componentDidMount() {\n    this.props.fetchWords(this.props.currentUserID);\n  }\n\n  renderList(currentItems) {\n    return currentItems.map((word) => {\n      return (\n        <li key={word.id}>\n          <WordListItem word={word} />\n        </li>\n      );\n    });\n  }\n\n  paginate(number) {\n    this.setState({ currentPage: number });\n  }\n\n  render() {\n    const indexOfLastItem = this.state.currentPage * this.state.itemsPerPage;\n    const indexOfFirstItem = indexOfLastItem - this.state.itemsPerPage;\n    const currentItems = this.props.words.slice(\n      indexOfFirstItem,\n      indexOfLastItem\n    );\n    console.log(currentItems);\n    return (\n      <>\n        <Search />\n        <h4>Your saved words</h4>\n        <ul>{this.renderList(currentItems)}</ul>\n        <Pagination\n          itemsPerPage={this.state.itemsPerPage}\n          totalItems={this.props.words.length}\n          paginate={this.paginate.bind(this)}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { words: state.words, currentUserID: state.auth.userId };\n};\n\nexport default connect(mapStateToProps, { fetchWords })(WordList);\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport WordSearchResult from \"../WordSearchResult\";\nimport WordCard from \"./WordCard\";\nimport WordList from \"./WordList\";\nimport Practice from \"./Practice\";\n\nimport { userPage } from \"../../sass/UserPage.module.scss\";\n\nconst UserPage = ({ isSignedIn, userName, currentWord }) => {\n  const [showResult, setShowResult] = useState(true);\n\n  useEffect(() => {\n    setSearchResultVisibility();\n  }, [currentWord]);\n\n  const setSearchResultVisibility = () => {\n    setShowResult(!showResult);\n  };\n  return (\n    <Router>\n      <section className=\"user-main\">\n        {isSignedIn ? (\n          <div className={userPage}>\n            <h1>Hello, {userName}</h1>\n            {currentWord.length && showResult ? (\n              <WordSearchResult updateVisibility={setSearchResultVisibility} />\n            ) : null}\n            <Switch>\n              <Route path=\"/user/practice\">\n                <Practice />\n              </Route>\n              <Route path=\"/user/word\">\n                <WordCard />\n              </Route>\n              <Route path=\"/user\">\n                <WordList />\n              </Route>\n            </Switch>\n          </div>\n        ) : (\n          <div>Must be signed in.</div>\n        )}\n      </section>\n    </Router>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"state from user page\", state);\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userName: state.auth.userName,\n    currentWord: state.searchResult,\n  };\n};\n\nexport default connect(mapStateToProps)(UserPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport GoogleAuth from \"../auth/GoogleAuth\";\nimport buttonStyles from \"../sass/Buttons.module.scss\";\nimport Avatar from \"./Avatar\";\nconst ActionsButtons = ({ isSignedIn }) => {\n  return (\n    <div className=\"action-buttons\">\n      <h4>Sign up to get started.</h4>\n      {isSignedIn ? <Avatar /> : null}\n      <GoogleAuth />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { isSignedIn: state.auth.isSignedIn };\n};\nexport default connect(mapStateToProps)(ActionsButtons);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Home from \"./components/Home\";\nimport Footer from \"./components/Footer\";\nimport UserPage from \"./components/userPages/UserPage\";\nimport \"./App.scss\";\nimport ActionButtons from \"./components/ActionButtons\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/user\">\n            <UserPage />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n        <ActionButtons />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\nexport default App;\n","import { SIGN_IN, SIGN_OUT, CREATE_USER } from \"../actions/types\";\n// assign state to empty object initally\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SIGN_IN:\n      console.log(action.payload);\n      return {\n        ...state,\n        isSignedIn: true,\n        userId: action.payload.userId,\n        userName: action.payload.userName,\n        avatarLink: action.payload.avatarLink,\n      };\n    case SIGN_OUT:\n      return { ...state, isSignedIn: false, userId: null };\n    // case CREATE_USER:\n    //   return state;\n    default:\n      return state;\n  }\n};\n","import { SEARCH_WORD } from \"../actions/types\";\nconst INITIAL_STATE = [];\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SEARCH_WORD:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n","import { CREATE_USER_WORD, FETCH_USER_WORDS } from \"../actions/types\";\nconst INITIAL_STATE = [];\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_USER_WORD:\n      return [...state, action.payload];\n    case FETCH_USER_WORDS:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport dictionaryReducer from \"./dictionaryReducer\";\nimport wordReducer from \"./wordReducer\";\nimport wordsReducer from \"./wordsReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  searchResult: dictionaryReducer,\n  words: wordsReducer,\n  currentWord: wordReducer,\n});\n","import { SET_USER_WORD, CREATE_SENTENCE } from \"../actions/types\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case SET_USER_WORD:\n      console.log(\"words reducer\", action.payload);\n      return { ...state, ...action.payload };\n    case CREATE_SENTENCE:\n      console.log(\"new sentence\", action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\n// Using thunk and apply middleware to handle promise in action creator\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport App from \"./App\";\nimport reducers from \"./reducers\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookmark\":\"Buttons_bookmark__20M4a\",\"megaphone\":\"Buttons_megaphone__2i34g\",\"bookmark__saved\":\"Buttons_bookmark__saved__2K2Cp\",\"megaphone__saved\":\"Buttons_megaphone__saved__22VSi\",\"close\":\"Buttons_close__3LtTo\",\"btn\":\"Buttons_btn__1XKS1\",\"btn__blue\":\"Buttons_btn__blue__-zucF\",\"btn__white\":\"Buttons_btn__white__3AGrL\",\"btn__transparent\":\"Buttons_btn__transparent__1WNEI\",\"btn__transparent_blue\":\"Buttons_btn__transparent_blue__27dPu\",\"btn__large\":\"Buttons_btn__large__3JRYh\",\"btn__medium\":\"Buttons_btn__medium__2xHxX\",\"btn__small\":\"Buttons_btn__small__uqR8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"practice\":\"Sentences_practice__WTWjc\",\"form\":\"Sentences_form__c8ft_\",\"sentenceList\":\"Sentences_sentenceList__HXnCE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"word\":\"SearchResult_word__2il2Y\",\"word__header\":\"SearchResult_word__header__b-pcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordCard\":\"WordCard_wordCard__3bU3y\",\"buttons\":\"WordCard_buttons__3AqJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3B9tV\",\"formHeader\":\"Search_formHeader__3L_gT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listitem\":\"WordListItem_listitem__2qvo6\",\"buttons\":\"WordListItem_buttons__2Jf3w\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b313e914.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__1jaa4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__3zWgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__147lR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPage\":\"UserPage_userPage__zKvhQ\"};"],"sourceRoot":""}